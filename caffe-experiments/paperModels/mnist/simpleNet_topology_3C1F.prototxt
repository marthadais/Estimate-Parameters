name: "simpleNet" layer {
	  name: "mnist"
	  type: "ImageData"
	  top: "data"
	  top: "label"
	  include {
	    phase: TRAIN
	  }
	  transform_param {
	    scale: 0.00390625
	  }
	  image_data_param {
	    source: "mnist-list-train.txt"
	    batch_size: 100
	  }
	 }
 layer {
	  name: "mnist"
	  type: "ImageData"
	  top: "data"
	  top: "label"
	  include {
	      phase: TEST
	  }
	  transform_param {
	      scale: 0.00390625
	  }
	  image_data_param {
	      source: "mnist-list-test.txt"
	      batch_size: 100
	  }
	 }
 layer {
	  name: "conv1"
	  type: "Convolution"
	  bottom: "data"
	  top: "conv1"
	  param {
	      lr_mult: 1
	  }
	  param {
	      lr_mult: 1
	  }
	  convolution_param {
	      num_output: 7;
	      kernel_h: 8;
	      kernel_w: 11;
	      pad_h: 4;
	      pad_w: 5;
	      stride_h: 1;
	      stride_w: 1;
	      weight_filler {
	         type: "gaussian"
	         mean: 0
	         std: 0.1
	      }
	      bias_filler {
	         type: "gaussian"
	         mean: 0
	         std: 0.1
	      }
	  }
	 }
 layer {
	  name: "relu1"
	  type: "ReLU"
	  bottom: "conv1"
	  top: "conv1"
	}
 layer {
	  name: "pool1"
	  type: "Pooling"
	  bottom: "conv1"
	  top: "pool1"
	  pooling_param {
	      pool: MAX
	      kernel_size: 3
	      stride: 2
	  }
	}
 layer {
	  name: "conv2"
	  type: "Convolution"
	  bottom: "pool1"
	  top: "conv2"
	  param {
	      lr_mult: 1
	  }
	  param {
	      lr_mult: 1
	  }
	  convolution_param {
	      num_output: 9;
	      kernel_h: 5;
	      kernel_w: 7;
	      pad_h: 2;
	      pad_w: 3;
	      stride_h: 1;
	      stride_w: 1;
	      weight_filler {
	         type: "gaussian"
	         mean: 0
	         std: 0.1
	      }
	      bias_filler {
	         type: "gaussian"
	         mean: 0
	         std: 0.1
	      }
	  }
	 }
 layer {
	  name: "relu2"
	  type: "ReLU"
	  bottom: "conv2"
	  top: "conv2"
	}
 layer {
	  name: "pool2"
	  type: "Pooling"
	  bottom: "conv2"
	  top: "pool2"
	  pooling_param {
	      pool: MAX
	      kernel_size: 3
	      stride: 2
	  }
	}
 layer {
	  name: "conv3"
	  type: "Convolution"
	  bottom: "pool2"
	  top: "conv3"
	  param {
	      lr_mult: 1
	  }
	  param {
	      lr_mult: 1
	  }
	  convolution_param {
	      num_output: 6;
	      kernel_h: 5;
	      kernel_w: 1;
	      pad_h: 2;
	      pad_w: 0;
	      stride_h: 1;
	      stride_w: 1;
	      weight_filler {
	         type: "gaussian"
	         mean: 0
	         std: 0.1
	      }
	      bias_filler {
	         type: "gaussian"
	         mean: 0
	         std: 0.1
	      }
	  }
	 }
 layer {
	  name: "relu3"
	  type: "ReLU"
	  bottom: "conv3"
	  top: "conv3"
	}
 layer {
	  name: "pool3"
	  type: "Pooling"
	  bottom: "conv3"
	  top: "pool3"
	  pooling_param {
	      pool: MAX
	      kernel_size: 3
	      stride: 2
	  }
	}
 layer {
	  name: "ip1"
	  type: "InnerProduct"
	  bottom: "pool3"
	  top: "ip1"
	  param {
	      lr_mult: 1
	  }
	  param {
	      lr_mult: 2
	  }
	  inner_product_param {
	      num_output: 10
	      weight_filler {
	        type: "gaussian"
	        mean: 0
	        std: 0.1
	      }
	      bias_filler {
	        type: "gaussian"
	        mean: 0
	        std: 0.1
	      }
	  }
	 }
 layer {
	  name: "accuracy_1"
	  type: "Accuracy"
	  bottom: "ip1"
	  bottom: "label"
	  top: "accuracy_1"
	  accuracy_param {
	      top_k: 1
	  }
	  include {
	      phase: TEST
	  }
	 }
 layer {
	  name: "loss"
	  type: "SoftmaxWithLoss"
	  bottom: "ip1"
	  bottom: "label"
	  top: "loss"
	 }
